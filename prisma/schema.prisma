generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String   @id @default(cuid())
  firebaseUid String   @unique
  email       String   @unique
  displayName String?
  photoURL    String?
  wallets     Wallet[]
  proofs      Proof[]
  did         DID?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([firebaseUid])
  @@index([email])
}

model Wallet {
  id        String   @id @default(cuid())
  address   String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  isPrimary Boolean  @default(false)
  label     String?
  createdAt DateTime @default(now())

  @@index([userId])
  @@index([address])
}

model Proof {
  id                  String   @id @default(cuid())
  proofId             String   @unique
  wallet              String
  userId              String?
  user                User?    @relation(fields: [userId], references: [id], onDelete: SetNull)
  modelInfo           String
  promptHash          String
  outputHash          String
  promptCID           String
  outputCID           String
  outputType          String   @default("text") // "text" or "image"
  txHash              String
  tokenId             String?  // NFT token ID (from AuthorshipToken contract)
  tokenTxHash         String? // Transaction hash for token minting
  originalityScore    Float?   // AI-powered originality score (0-100)
  originalityAnalysis String?  // AI analysis explanation
  originalityConfidence Float? // Confidence in the originality score (0-100)
  vcId                String?  // W3C Verifiable Credential ID (urn:uuid:...)
  vcIpfsCID           String?  // IPFS CID of the VC document
  createdAt           DateTime @default(now())

  @@index([wallet])
  @@index([userId])
  @@index([proofId])
  @@index([createdAt])
  @@index([tokenId])
  @@index([originalityScore])
  @@index([vcId])
}

model DID {
  id          String   @id @default(cuid())
  didId       String   @unique // Format: did:neuramark:<userId>
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  didDocument Json     // DID JSON document with verifiedProofs array
  ipfsCID     String?  // Immutable IPFS reference to DID document
  signature   String?  // Cryptographic signature of DID document
  proofCount  Int      @default(0) // Denormalized count for quick access
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([didId])
  @@index([userId])
  @@index([ipfsCID])
}
